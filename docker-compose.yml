services:
  worker:
    build:
      context: .
      dockerfile: DockerFile
    command: celery -A ecommerce_dashboard worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: on-failure

  beat:
    build:
      context: .
      dockerfile: DockerFile
    command: celery -A ecommerce_dashboard beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: on-failure

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: on-failure

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    restart: on-failure

  web:
    build:
      context: .
      dockerfile: DockerFile
    command: >
      sh -c "python manage.py migrate &&
            python manage.py collectstatic --no-input &&
            python manage.py import_configs &&
            gunicorn ecommerce_dashboard.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: on-failure


volumes:
  postgres_data:
